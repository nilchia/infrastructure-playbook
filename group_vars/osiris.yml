---
hostname: osiris.denbi.de
server_alias: osiris-denbi.galaxyproject.eu

php_memory_limit: "128M"
php_max_execution_time: "60"
php_upload_max_filesize: "128M"
php_packages:
  - php
  - php-cli
  - php-pear
  - php-ldap
  - php-pecl-mongodb

php_webserver_daemon: httpd
php_enablerepo: epel

php_enable_php_fpm: true
php_fpm_state: started
php_fpm_enabled_on_boot: true

osiris_www_dir: /var/www/osiris
osiris_config_file: "{{ osiris_www_dir }}/CONFIG.php"

apache_vhosts:
  - servername: "{{ hostname }}"
    documentroot: "{{ osiris_www_dir }}"
    extra_parameters: |
      Alias /.well-known/acme-challenge/ {{ osiris_www_dir }}/.well-known/acme-challenge/
      <Directory "{{ osiris_www_dir }}">
          Options None
          AllowOverride None
          ForceType text/plain
          Require all granted
      </Directory>
      ProxyPassMatch ^/(.*\.php(/.*)?)$ "fcgi://127.0.0.1:9000{{ osiris_www_dir }}"
  - servername: "{{ server_alias }}"
    documentroot: "{{ osiris_www_dir }}"
    extra_parameters: |
      Alias /.well-known/acme-challenge/ {{ osiris_www_dir }}/.well-known/acme-challenge/
      <Directory "{{ osiris_www_dir }}">
          Options None
          AllowOverride None
          ForceType text/plain
          Require all granted
      </Directory>
      ProxyPassMatch ^/(.*\.php(/.*)?)$ "fcgi://127.0.0.1:9000{{ osiris_www_dir }}"
certbot_post_renewal: |
    systemctl restart httpd || true
certbot_domains:
  - "{{ hostname }}"
  - "{{ server_alias }}"
certbot_auth_method: --webroot
certbot_well_known_root: "{{ osiris_www_dir }}"
# Certbot auto-renew cron job configuration (for certificate renewals).
# Where to put Certbot when installing from source or pip.
certbot_dir: /opt/certbot

certbot_letsencrypt_dir: /etc/letsencrypt
# the test in tasks/request-cert.yml ensure that this is not used if
# certbot_dns_provider is not defined but a default is necessary to ensure that
# an error is not triggered when certbot_dns_provider is not defined

certbot_environment: staging # change/remove before switching to production

# of the format 'nginx', 'root'
certbot_share_key_users:
  - apache
# of the format '999:999'
certbot_share_key_dir: /etc/ssl/user

certbot_virtualenv_command: python3 -m venv
# Agree to the TOS
certbot_agree_tos: "--agree-tos"
# Must be set as following to agree automatically, otherwise it will fail.
# certbot_agree_tos: "--agree-tos"
